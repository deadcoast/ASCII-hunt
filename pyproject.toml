[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ascii-hunt"
version = "0.1.0"
description = "ASCII UI Translation Engine"
authors = [
    {name = "ASCII Hunt Team"}
]
readme = "README.md"
requires-python = ">=3.10"

[tool.ruff]
# Enable the new Ruff formatter
include = ["src/**/*.py", "import_miner/**/*.py", "tools/**/*.py", "tests/**/*.py"]
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    ".mypy_cache",
    ".ruff_cache",
    "*.pyc",
]
lint.select = [
    "E", "F", "B", "I", "N", "UP", "ANN",
    "D", # docstring rules
    "COM", # comma rules (except COM812)
    "RUF" # Ruff-specific rules
]
lint.ignore = [
    "D203", # Ignore 'incorrect-blank-line-before-class' in favor of D211
    "D213", # Ignore 'multi-line-summary-second-line' in favor of D212
    "COM812" # Ignore potentially conflicting comma rule
]
line-length = 88
target-version = "py310"

# Use Ruff's native formatter instead of the legacy server
format.quote-style = "double"
format.indent-style = "space"
format.skip-magic-trailing-comma = false
format.line-ending = "auto"

# Import sorting configuration
lint.isort.known-third-party = ["numpy", "pytest"]
lint.isort.known-first-party = ["src", "import_miner", "tools"]

# Enable the new native LSP server
lint.extend-select = ["ALL"]
lint.fixable = ["ALL"]
lint.unfixable = []

# Docstring settings
lint.pydocstyle.convention = "google"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
^/(
  (\.eggs|\.git|\.hg|\.mypy_cache|\.nox|\.tox|\.venv|_build|buck-out|build|dist|\.ruff_cache)/
)''' 